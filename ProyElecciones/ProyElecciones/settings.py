"""
Django settings for ProyElecciones project.

Generated by 'django-admin startproject' using Django 3.2.9.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""
import os
from pathlib import Path
from dotenv import load_dotenv
load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

if os.name == 'nt':
    VENV_BASE = os.environ['VIRTUAL_ENV']
    GDAL_LIBRARY_PATH = os.path.join(VENV_BASE, 'Lib\\site-packages\\osgeo\\gdal304.dll')

from django.contrib.messages import constants as messages  # agregado por OLMOS

MESSAGE_TAGS = {
    messages.DEBUG: 'alert-secondary',
    messages.INFO: 'alert-info',
    messages.SUCCESS: 'alert-success',
    messages.WARNING: 'alert-warning',
    messages.ERROR: 'alert-danger',
}  # Agregado por Olmos

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-twrsy04g=_3ennu0%y8vu0vlabv_9twzfg#!$e_t@xe9fbix-&'

# SECURITY WARNING: don't run with debug turned on in production!
#DEBUG = True
DEBUG=bool(os.environ['DEBUG']) # Según configuración del .env
ALLOWED_HOSTS = ['*']

DIC_GRUPOS = {'admin_sistema': ['view', 'add', 'change', 'delete']}
# Poner las Aplicaciones propios aca que se consideren necesarias que el admin del sistema pueda administrar
MIS_APPS = [
    'AppAdministracion',
    'AppElecciones'
]

# Application definition

INSTALLED_APPS = [
    "daphne",
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'user_sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.gis',
    'widget_tweaks',
    'AppLogin',
    'captcha',
    'mptt',
    'import_export',
    'guardian',
    'crispy_forms',
    'auditlog',
    'leaflet',
    'channels',
    'django_extensions',
    'preventconcurrentlogins',
    'django_plotly_dash.apps.DjangoPlotlyDashConfig', #Plotly
] + MIS_APPS

CRISPY_TEMPLATE_PACK = 'bootstrap4'

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'user_sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'crum.CurrentRequestUserMiddleware',  # https://pythonhosted.org/django-crum/
    'AppAdministracion.midelwareAjax.AjaxRedirectHandlerMiddleware',
    'auditlog.middleware.AuditlogMiddleware',
    'preventconcurrentlogins.middleware.PreventConcurrentLoginsMiddleware',
    #'whitenoise.middleware.WhiteNoiseMiddleware',
    'django_plotly_dash.middleware.BaseMiddleware', #Plotly

]
AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.ModelBackend',
    'guardian.backends.ObjectPermissionBackend',
)
# Establecer esta configuracion sino da error al crear migraciones
ROOT_URLCONF = 'ProyElecciones.urls'

# Establecer esta configuracion sino da error al crear migraciones
ANONYMOUS_USER_NAME = None
SESSION_ENGINE = 'user_sessions.backends.db'
# SESSION_EXPIRE_SECONDS = 84600  # 1 dia
# SESSION_EXPIRE_SECONDS = 3600  # 1 hour
SESSION_EXPIRE_SECONDS = float(os.environ['SESSION_EXPIRE_SECONDS'])  # Según configuración del .env
SESSION_EXPIRE_AT_BROWSER_CLOSE = True
# SESSION_EXPIRE_SECONDS = 3600
SESSION_EXPIRE_AFTER_LAST_ACTIVITY = True
SESSION_TIMEOUT_REDIRECT = 'logout'
# PASSWORD_RESET_TIMEOUT = 3600
PASSWORD_RESET_TIMEOUT = 86400  # 1 dia
SESSION_COOKIE_SECURE = False
#CSRF_COOKIE_SAMESITE = "None"
#SESSION_COOKIE_SAMESITE = "None"
CSRF_COOKIE_SECURE = False

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],  # Olmos
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'ProyElecciones.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }

DATABASES = {
    'default': {
        'ENGINE': 'django.contrib.gis.db.backends.postgis',
        'NAME':os.environ['DB_NAME'], # Según configuración del .env
        'USER':os.environ['DB_USER'], # Según configuración del .env
        'PASSWORD': os.environ['DB_PASSWORD'], # Según configuración del .env
        'HOST': os.environ['HOST'],
        'PORT': '5432',
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'es-ar'  # Para version de django 3.0 es 'es-ar'

TIME_ZONE = 'America/Argentina/Buenos_Aires'

USE_I18N = True

USE_L10N = True

USE_TZ = True

SILENCED_SYSTEM_CHECKS = ['admin.E410']
# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/elecciones/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static')
STATIC_MEDIA = os.path.join(BASE_DIR, 'static/media')
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'assets')]
MEDIA_ROOT = os.path.join(BASE_DIR, 'media/')
MEDIA_URL = '/elecciones/media/'

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

AUTH_USER_MODEL = 'AppAdministracion.Usuario'

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

LOGIN_REDIRECT_URL = '/elecciones/inicio'

LOGOUT_REDIRECT_URL = '/elecciones/login'

LOGIN_URL = '/elecciones/login'
SESSION_COOKIE_PATH = '/elecciones'

# During development only
# EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
# EMAIL_HOST = 'mail.fuerzas-armadas.mil.ar'
# EMAIL_HOST_USER = 'sig-coffaa@fuerzas-armadas.mil.ar'
# EMAIL_HOST_PASSWORD = 'Lunes2021@'
EMAIL_HOST_USER = 'sigcoffaa@gmail.com'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_HOST_PASSWORD = 'hdthfdlvhgacnipa'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
DEFAULT_FROM_EMAIL = 'Tablero de Comando del COFFA - Módulo de Elecciones <sigcoffaa@gmail.com>'
# Mambanegra123---->>>clave de sigcoffaa@gmail.com
# DEFAULT_FROM_EMAIL = ''
# ADMINS = (('SM Raúl Olmos', 'sig-coffaa@fuerzas-armadas.mil.ar'),)
# ADMINS = ((''),)
# MANAGERS = ADMINS

CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.dummy.DummyCache',
    }
}

## Para Geojson
SERIALIZATION_MODULES = {
    "geojson": "django.contrib.gis.serializers.geojson",
}

CAPTCHA_CHALLENGE_FUNCT = 'captcha.helpers.math_challenge'  # Reto de tipo matematico
CAPTCHA_NOISE_FUNCTIONS = ('captcha.helpers.noise_dots',)  # Quitarle el ruido a la imagen
CAPTCHA_MATH_CHALLENGE_OPERATOR = '*'  # Operador matematico a emplear
CAPTCHA_LETTER_ROTATION = (-5, 5)
CAPTCHA_FONT_SIZE = 34


LEAFLET_CONFIG = {

    'DEFAULT_CENTER': (-39.5955824, -58.4955451),
    'DEFAULT_ZOOM': 3,
    'MAX_ZOOM': 18,
    'MIN_ZOOM': 3,
    'ATTRIBUTION_PREFIX': 'Desarrollado por EMCO-COFFAA',
    'RESET_VIEW': False,

    'PLUGINS': {
        'buscador': {
            'css': ['app/leaflet-geosearch/dist/geosearch.css'],
            'js': 'app/leaflet-geosearch/dist/bundle.min.js',
            'auto-include': True,
        },
    },
    'NO_GLOBALS': False,
}
ASGI_APPLICATION = "ProyElecciones.asgi.application"

# Usar solo para desarrollo pera producción usar redis
CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "channels.layers.InMemoryChannelLayer"
    }
}


X_FRAME_OPTIONS = 'SAMEORIGIN'

DATA_UPLOAD_MAX_MEMORY_SIZE = 50242880

PLOTLY_DASH = {

    # Route used for the message pipe websocket connection
    #"ws_route" :   "dpd/ws/channel",

    # Route used for direct http insertion of pipe messages
    #"http_route" : "dpd/views",

    # Flag controlling existince of http poke endpoint
    #"http_poke_enabled" : True,

    # Insert data for the demo when migrating
    #"insert_demo_migrations" : False,

    # Timeout for caching of initial arguments in seconds
    "cache_timeout_initial_arguments": 120,

    # Name of view wrapping function
    "view_decorator": None,

    # Flag to control location of initial argument storage
    "cache_arguments": True,

    # Flag controlling local serving of assets
    "serve_locally": False,
}